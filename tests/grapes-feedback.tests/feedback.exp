
# exp_internal 1

### test the feedback_assert function macro
set test_name "test the feedback_assert function macro"
# nothing should happen if the given condition is true
given an executable "../tests/fdispatch"
  when I run with parameters "feedback_assert 1 error_message 123"
  then I should not see "error_message"
  and it should return 0
  when I run with parameters "feedback_assert 1 error_message 123"
  then I should see "fdispatch done."
  and it should return 0
# the program should terminate if the given condition is false
given an executable "../tests/fdispatch"
  when I run with parameters "feedback_assert 0 error_message 123"
  then I should not see "fdispatch done."
  and it should not return 0
  when I run with parameters "feedback_assert 0 error_message 123"
  then I should see "fdispatch: error: error_message :: 123"
  and it should not return 0

### test the feedback_assert_wrn function macro
set test_name "test the feedback_assert_wrn function macro"
# nothing should happen if the given condition is true
given an executable "../tests/fdispatch"
  when I run with parameters "feedback_assert_wrn 1 warning_message 123"
  then I should not see "warning_message"
  and it should return 0
  when I run with parameters "feedback_assert_wrn 1 warning_message 123"
  then I should see "fdispatch done."
  and it should return 0
# the program should print a warning if the given condition is false
given an executable "../tests/fdispatch"
  when I run with parameters "feedback_assert_wrn 0 warning_message 123"
  then I should see "fdispatch: warning: warning_message :: 123"
  and I should see "fdispatch done."
  and it should return 0

### test the feedback_error_at_line function
set test_name "test the feedback_error_at_line function"
# a proper error string should be printed
given an executable "../tests/fdispatch"
  when I run with parameters "feedback_error_at_line testfile 123 error_message 312"
  then I should see "fdispatch:testfile:123: error: error_message :: 312"
  and I should see "fdispatch done."
  and it should return 0

### test the feedback_error function
set test_name "test the feedback_error function"
# an error string should be printed and the program should terminate if the status is != EXIT_SUCCESS
given an executable "../tests/fdispatch"
  when I run with parameters "feedback_error 1 error_message 123"
  then I should see "fdispatch: error: error_message :: 123"
  and it should not return 0
  when I run with parameters "feedback_error 1 error_message 123"
  then I should not see "fdispatch done."
  and it should not return 0
# an error string should be printed and the program should continue running otherwise
given an executable "../tests/fdispatch"
  when I run with parameters "feedback_error 0 error_message 123"
  then I should see "fdispatch: error: error_message :: 123"
  and I should see "fdispatch done."
  and it should return 0

### test the feedback_warning function
set test_name "test the feedback_warning function"
# a warning string should be printed
given an executable "../tests/fdispatch"
  when I run with parameters "feedback_warning warning_message 123"
  then I should see "fdispatch: warning: warning_message :: 123"
  and I should see "fdispatch done."
  and it should return 0

send_user "\n"
